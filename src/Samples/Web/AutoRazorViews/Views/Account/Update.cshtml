@model AutoUpdateUserModel

@{
    ViewBag.Title = "Update";
}

<h2>@ViewBag.Title.</h2>

<form action="@Url.Action("Update", "Account")" method="post" class="form-horizontal" role="form">
    <h4>Update your account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <p>@ViewBag.Message</p>
        </div>
    }
    <div class="row">
        <div class="col-md-9">
            @Html.AutoEditView(Model, ContentAlignment.Left, GetRenderOptions())
            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa fa-save"></i>&nbsp;Update
                </button>
            </div>
        </div>
    </div>
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@functions
{
    ControlRenderOptions GetRenderOptions()
    {
        return new ControlRenderOptions
        {
            CamelCaseId = true,
            GenerateIdAttribute = true,
            GenerateNameAttribute = true,
            OptionsGetter = propertyName =>
            {
                if (propertyName.Equals(nameof(AutoUpdateUserModel.AgeRange)))
                    return new[]
                    {
                        new SelectOption(id: 0, value: "[Your most appropriate age]", isPrompt: true),
                        new SelectOption(1, "Minor (< 18)"),
                        new SelectOption(2, "Below or 25"),
                        new SelectOption(3, "Below or 30"),
                        new SelectOption(4, "Below or 40"),
                        new SelectOption(5, "Below 50"),
                        new SelectOption(6, "Between 50 and 54"),
                        new SelectOption(7, "Between 55 and 60"),
                        new SelectOption(8, "Above 60"),
                        new SelectOption(9, "Above 70"),
                        new SelectOption(10, "Above 80"),
                    };

                if (propertyName.Equals(nameof(AutoUpdateUserModel.FavouriteColor)))
                    return new[]
                    {
                        new SelectOption(id: "Black", value: "Black"),
                        new SelectOption(id: "Blue", value: "Blue"),
                        new SelectOption(id: "White", value: "White"),
                        new SelectOption(id: "Yellow", value: "Yellow"),
                    };

                return null;
            }
        };
    }
}